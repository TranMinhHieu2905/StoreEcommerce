@inherits LayoutComponentBase
@using AntDesign
@using LibraryStoreEcommerce
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject MessageService _message
@using Blazored.LocalStorage;
@inject Blazored.LocalStorage.ILocalStorageService localStore
<head>
    
    <title>StoreEcommerce</title>   
    <link href="css/layout.css" rel="stylesheet" />
     <link href="css/index.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
    .ant-modal-content .button
    {
     width: 0px; 
     height: 0px; 
     margin-left: 0px; 
    }
</style>
</head>
<div class="page">
    <main>
        <CascadingValue Value="@theme">
         <div class="header" id="header">
             <div class="row @CHangeColor" style="margin:0">
                <div class="col-2"> </div>
                <div class="col-1"> 
                    <a href="/"><img style="width: 134px;" src ="img_list/hieuanh-removebg-preview.png" /></a>
                </div>
                <div class="col-6">
                    <div class="divtimkiem" id="divtimkiem">
                                <input type="text" id="txtsearchkey" placeholder="Tìm mã sản phẩm, tên sản phẩm" class="txttimkiem" />
                                <input style="@Color" type="button" value="Tìm kiếm" class="btntimkiem" />
                    </div>
                    
                </div>
                @if(ShowMal)
                {
                     <div class="col-3 color_icon">
                          <div class="icon">
                             <i class="fa fa-question-circle" aria-hidden="true"></i><a class="color-text" @onclick="LoginEmail">Trợ giúp</a>
                             <i class="fa fa-user-o" aria-hidden="true"></i><a class="color-text"@onclick="@(()=>{_visible = true;})" href="">Đăng nhập</a>
                             <i class="fa fa-registered" aria-hidden="true"></i><a class="color-text" @onclick="@(()=>{_visible1 = true;})" href="">Đăng kí</a>  
                          </div>
                         <div class="icon_giohang">
                              <i class="fa fa-cart-plus" aria-hidden="true"></i><a class="color-text" @onclick="NextPageCart">Giỏ hàng</a>   
                        </div>
                    </div>             
                } 
                @if(ModalShow)
                {
                    <div class="col-3 color_icon">
                         <div class="icon">
                             <Dropdown>
                                    <Overlay>
                                        <Menu>
                                            <MenuItem>
                                                <a style="text-decoration:none;color:black" href="account">
                                                    Thông tin
                                                </a>
                                            </MenuItem>
                                            <MenuItem>
                                                <a @onclick="@(async () =>await LogOut())">
                                                    Đăng xuất
                                                </a>
                                            </MenuItem>
                                        </Menu>
                                    </Overlay>
                                    <ChildContent>
                                        <a style="color:white;text-decoration:none" class="ant-dropdown-link" @onclick:preventDefault>
                                           <i class="fa fa-user-o" aria-hidden="true"></i> @account.UserName <Icon Type="down" />
                                        </a>
                                    </ChildContent>
                                </Dropdown>
                        </div>
                        <div class="icon_giohang">
                              <i class="fa fa-cart-plus" aria-hidden="true"></i><a class="color-text" @onclick="NextPageCart">Giỏ hàng</a>   
                        </div>
                    </div>
                }
            </div>
        </div>
      
        <article class="content px-4" style="padding:0 !important;">
            @Body
        </article>

        <div class="footer" style="@Color">
               <div class="row" style="margin:0">
                   <div class="col-1"></div>
                   <div class="col-3">
                        <b class="text_edit">LIÊN HỆ</b><br /><br />
                        <ul>
                            <li><b>Cửa hàng online số 1 </b> </li>
                            <li><i class="fa fa-location-arrow" aria-hidden="true"></i><b>  487 Cổ Nhuế 2 - Bắc Từ Liêm - Hà Nội</b> </li>
                            <li><i class="fa fa-envelope" aria-hidden="true"></i>  Email : hieuminhtran2905@gmail.com</li>
                            <li><i class="fa fa-phone-square" aria-hidden="true"></i>  Điện thoại: (0327.175.518)</li>
                            <li><i class="fa fa-rss" aria-hidden="true"></i>  Hoạt động: 8h30 - 17h30 từ T2 - T6</li>
                        </ul>
                       
                   </div>
                   <div class="col-3 ">
                         <b class="text_edit">TRỢ GIÚP</b><br /><br />
                          <ul>
                             <NavLink style=" color: white;" href="/help"><li>Hướng dẫn mua hàng</li></NavLink>
                            <li>Hướng dẫn kiểm tra đơn hàng đã mua</li>
                            <li>Hướng dẫn đổi địa chỉ</li>
                            <li>Trò chuyện với nhân viên tư vấn</li>
                            <NavLink style=" color: white;" href="/helpchangepass"><li>Đổi mật khẩu</li></NavLink>
                        </ul>
                   </div>
                   <div class="col-2 ">
                         <b>KẾT NỐI</b><br /><br />
                            <div class="row" style="width:304px">
                                <div class="col-2">
                                    <span class="footer_ketnoi">
                                        <Icon Type="facebook" Theme="outline"/>
                                    </span>
                                </div>
                                <div class="col-2">
                                    <span class="footer_ketnoi">
                                       <Icon Type="google" Theme="outline"/>
                                    </span>
                                </div>
                                <div class="col-2">
                                    <span class="footer_ketnoi">
                                       <Icon Type="instagram" Theme="outline"/>
                                    </span>
                                </div>
                                <div class="col-2">
                                    <span class="footer_ketnoi">
                                      <Icon Type="youtube" Theme="outline"/>
                                    </span>
                                </div>
                            </div>
                   </div>
                   <div class="col-2" style="font-size: 13px;">
                         <b>PHƯƠNG THỨC THANH TOÁN</b><br /><br />
                         <img src="./imagefooter/image_bank1.png" />
                         <img src="./imagefooter/image_bank2.png" />
                         <img src="./imagefooter/image_bank3.png" />
                         <img src="./imagefooter/image_bank4.png" />
                         <img src="./imagefooter/image_bank5.png" />   
                   </div>
                   <div class="col-1">
                        <div style="background-color:white;margin-top: 33px; border-radius: 10px;" include="form-input-select()">
                        <select @onchange="DoStuff">  
                              <option value="0" hidden>Chọn màu sắc</option>
                              <option value="1">Đen</option>
                              <option value="2">Cam</option>
                              <option value="3">Xanh</option>
                        </select>
                </div>
                   </div>
               </div>               
        </div>
         </CascadingValue>
    </main>
</div>
@{
    RenderFragment footer = @<Template>
                <div class="row" style="margin-top: 20px;">
               <div class="col-md-6 col-xs-6" style="text-align: center">
                    <Button OnClick="LoginEmail" Danger Type="@ButtonType.Primary" style="height: 45px;" ><span class="fa fa-google-plus"></span> Đăng nhập bằng Email </Button>
                </div>
                <div class="col-md-6 col-xs-6" style="text-align: center">
                    <Button OnClick="LoginEmail" Type="@ButtonType.Primary" style="height: 45px;" ><span class="fa fa-facebook-f"></span> Đăng nhập bằng Facebok </Button>
                </div>
                </div>
    </Template>;
}
@{
    RenderFragment footer1 = @<Template>
                
    </Template>;
}
<Modal 
       Visible="@_visible"
       OnOk="@HandleOk"
       OnCancel="@HandleCancel"
       Footer="@footer">
       <div class="login-box">
        <h2 style="text-align:center">Đăng nhập</h2>
        <EditForm Model="@accountInput" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator />
                <label style="color:black">Tài khoản</label>
                <div class="user-box">
                    <div include="form-input-input()">
                        <InputText @bind-Value="accountInput.UserName" style=" border-radius: 8px;" type="text" placeholder="Nhập tài khoản"></InputText><br>
                    </div>
                    <ValidationMessage For="@(() => accountInput.UserName)" /><br>

                </div>
                <label style="color:black">Mật khẩu</label>
                <div class="user-box">
                    <div include="form-input-input()">
                        <InputText @bind-Value="accountInput.Password" placeholder="Nhập mật khẩu" style=" border-radius: 8px;" type="@TxtType" id="fname" name="fname">  </InputText><i @onclick="ShowPassword" style="position:absolute;margin-left:-30px;margin-top:14px" class="@type"></i>
                    </div>
                    <ValidationMessage For="@(() => accountInput.Password)" />
                </div><br />
                <div class="row">
                    <div class="col-5">
                    </div>
                      <div class="col-2"></div>
                    <div class="col-3" style=" padding-right: 0px;padding-left: 0px;">
                          <button @onclick="CheckLogin" class="btn btn-primary">Đăng nhập </button>
                    </div>

                    <div class="col-2" style=" padding-right: 0px;padding-left: 0px;">
                          <button  @onclick="HandleCancel" class="btn btn-danger">Trở lại </button>
                    </div>                  
                </div>                
        </EditForm>
        </div>
</Modal>
<Modal 
       Visible="@_visible1"
       OnOk="@HandleOk"
       OnCancel="@HandleCancel"
       Footer="@footer1">
       <div class="login-box">
        <h2 style="text-align:center">Đăng ký tài khoản</h2>
        <EditForm Model="@accountResgiter" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator />
                <label style="color:black">Tên đăng nhập</label>
                <div class="user-box">
                    <div include="form-input-input()">
                        <InputText @bind-Value="accountResgiter.UserName" style=" border-radius: 8px;" type="text" placeholder="Nhập tài khoản"></InputText><br>
                    </div>
                    <ValidationMessage For="@(() => accountResgiter.UserName)" /><br>

                </div>
                <label style="color:black">Mật khẩu</label>
                <div class="user-box">
                    <div include="form-input-input()">
                        <InputText @bind-Value="accountResgiter.Password" placeholder="Nhập mật khẩu" style=" border-radius: 8px;" type="@TxtType" id="fname" name="fname">  </InputText><i @onclick="ShowPassword" style="position:absolute;margin-left:-30px;margin-top:14px" class="@type"></i>
                    </div>
                    <ValidationMessage For="@(() => accountResgiter.Password)" />
                </div><br />
                  <label style="color:black">Họ và tên</label>
                <div class="user-box">
                    <div include="form-input-input()">
                        <InputText @bind-Value="accountResgiter.FullName" style=" border-radius: 8px;" type="text" placeholder="Nhập họ tên"></InputText><br>
                    </div>
                    <ValidationMessage For="@(() => accountResgiter.FullName)" /><br>

                </div>
                 <label style="color:black">Ngày sinh</label>
                <div style="color:black">                             
                 <DatePicker @bind-Value="@accountResgiter.Birthday" Format="dd/MM/yyyy" />
                         <ValidationMessage For="@(() => accountResgiter.Birthday)" />
                 </div><br>
                   <label style="color:black">Giới tính</label><br>
                 <RadioGroup @bind-Value="@_intValue">
                    <Radio Value="0">Nam</Radio>
                    <Radio Value="1">Nữ</Radio>
                    <Radio Value="2">Khác</Radio>
                </RadioGroup>
                <br />
                 <br />
                  <label style="color:black">Số điện thoại</label>
                <div class="user-box">
                    <div include="form-input-input()">
                        <InputText @bind-Value="accountResgiter.Phone" style=" border-radius: 8px;" type="text" placeholder="Nhập số điện thoại"></InputText><br>
                    </div>
                    <ValidationMessage For="@(() => accountResgiter.Phone)" /><br>

                </div>
                <label style="color:black">Email</label>
                <div class="user-box">
                        <div include="form-input-input()">
                            <InputText @bind-Value="accountResgiter.Email" style=" border-radius: 8px;" type="text" placeholder="Nhập email"></InputText><br>
                        </div>
                        <ValidationMessage For="@(() => accountResgiter.Email)" /><br>
                 </div>
                  <label style="color:black">Chọn thành phố</label> <label><ValidationMessage For="() => accountResgiter.ProvinceCode" /></label>
                  <div style="background-color:white;" include="form-input-select()">
                      <select style="border-radius:8px;" @onchange="handleChange">
                          <option selected="selected" disabled value="">Chọn thành phố</option>
                          @foreach (var item in listaddress)
                            {
                                 <option value="@item.ProvinceCode">@item.AddressName</option>
                            }
                     </select>
                    
                  </div>
                 <br />
                     <label style="color:black">Chọn quận,huyện</label>   <label><ValidationMessage For="() => accountResgiter.DistrictCode" /></label>
                  <div style="background-color:white;" include="form-input-select()">
                      <select style="border-radius:8px;" @onchange="handleChange1">
                           <option selected="selected" disabled value="">Chọn quận,huyện</option>
                          @foreach (var item in listdistrict)
                            {
                                 <option value="@item.ProvinceCode">@item.AddressName</option>
                            }
                     </select>
                   
                  </div>
                 <br />
                 <label style="color:black">Địa chỉ</label>
                <div class="user-box">
                        <div include="form-input-input()">
                            <InputText @bind-Value="accountResgiter.Address" style=" border-radius: 8px;" type="text" placeholder="Nhập địa chỉ cụ thể,số nhà"></InputText><br>
                        </div>
                        <ValidationMessage For="@(() => accountResgiter.Address)" /><br>
                 </div> <br />
                <div class="row">
                    <div class="col-7">
                    </div>
                    <div class="col-2">
                          <button @onclick="RegisterCheck" class="btn btn-success">Đăng ký </button>
                    </div>
                    <div class="col-1">

                    </div>
                    <div class="col-2">
                          <Button Danger Type="@ButtonType.Primary" @onclick="HandleCancel" class="btn btn-danger">Trở lại </Button>
                    </div>
                  
                </div>
                
        </EditForm>
        </div>
</Modal>

@code{
    private ThemeInfo theme = new() { ButtonClass = "color:#1890ff",ButtonClassColor ="#1890ff"};
    private string CHangeColor = "background_layout";
    private string Color = "background-color:#1890ff";
    string ID = "";
    int IDcolor=0;
    // change color
    public async Task DoStuff(ChangeEventArgs e)
    {
        ID = e.Value.ToString();
        IDcolor = Int32.Parse(ID);
        if(IDcolor==1)
        {
            CHangeColor = "background_layoutoption1";
            Color = "background-color:black";
            theme.ButtonClass = "color:black";
            theme.ButtonClassColor = "black";
        }
        else if(IDcolor==2)
        {
            CHangeColor = "background_layoutoption2";
            Color = "background-color:orange";
            theme.ButtonClass = "color:orange";
             theme.ButtonClassColor = "orange";
        }
        else if(IDcolor==3)
        {
            CHangeColor = "background_layout";
            Color = "background-color:#1890ff";
            theme.ButtonClass = "color:#1890ff";
            theme.ButtonClassColor = "#1890ff";
        }
    }
    int _intValue = 0;
    AccountResgiter accountResgiter = new AccountResgiter();
    public bool ModalShow = false;
    public bool ShowMal = true;
    bool _visible = false;
    bool _visible1 = false;
    bool _loading = false;
    private void ShowModal()
    {
        _visible = true;

    }
    private async Task HandleOk(MouseEventArgs e)
    {
        //_loading = true;
        //await Task.Delay(3000);
        //_visible = false;
        //_loading = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        _visible = false;
        _visible1 = false;
    }
    //login
    public string TxtType = "password";
    public string type = "fa fa-eye-slash";

    public void ShowPassword()
    {
        if (this.TxtType == "password")
        {
            this.TxtType = "text";
            this.type = " fa fa-eye";
        }
        else
        {
            this.TxtType = "password";
            this.type = " fa fa-eye-slash";
        }
    }
    //data
    AccountInput accountInput = new AccountInput();
    AccountOutput account = new AccountOutput();
    private async void OnValidSubmit(EditContext context)
    {
        if (context.Validate())
        {

        }
        else
        {

        }
    }
    private async Task Login()
    {
        var addItem = new AccountInput { UserName=accountInput.UserName,Password=accountInput.Password};
        var response = await Http.PostAsJsonAsync<AccountInput>("api/Account/GetList", addItem);
        account = await response.Content.ReadFromJsonAsync<AccountOutput>(); 
        if(account.ProvinceCode != 0)
        {
            await _message.Success("Đăng nhập thành công");
            ShowMal = false;
            ModalShow = true;
            _visible = false;
            SetLocalStorage();
        }
        else
        {
            await Error();
        }
    }
    private async Task CheckLogin()
    {
        if(accountInput.UserName == string.Empty || accountInput.Password ==string.Empty)
        {

        }
        else
        {
            await Login();
        }
    }
    private async Task Error()
    {
        await _message.Error("Tài khoản hoặc mật khẩu không đúng, vui lòng thử lại");
        _visible = true;
    }
    const string noteKey = "note";
    string noteContent="";
    public async void SetLocalStorage()
    {
        await localStore.SetItemAsync(noteKey, account);
    }
    protected override async Task OnInitializedAsync()
    {        
        account = await localStore.GetItemAsync<AccountOutput>(noteKey);
        if(account != null)
        {
            ShowMal = false;
            ModalShow = true;
        }
        else
        {
            await _message.Error("Bạn chưa đăng nhập");
        }
        await GetProvince();
    }
    public async Task HelpMe()
    {
        await _message.Info("Đang phát triển");
    }
    public async Task LogOut()
    {
        accountInput.Password = "";       
        ShowMal = true;
        ModalShow = false;
        _visible = true;
        NavigationManager.NavigateTo("/");
        await localStore.ClearAsync();
    }
    public async Task NextPageCart()
    {
        if(account !=null )
        {
            NavigationManager.NavigateTo("/Cart");
        }
        else
        {
            _visible = true;
            await _message.Error("Bạn chưa đăng nhập, vui lòng đăng nhập");
        }
    }
    // Lấy ra thành phố;

    List<Address> listaddress = new List<Address>();
    public async Task GetProvince()
    {       
        listaddress = await Http.GetFromJsonAsync< List<Address>>($"api/Address/SelectProvince");
    }
    // Lấy ra quận,huyện theo thành phố
    int result = 0;
    List<Address> listdistrict = new List<Address>();
    public async Task handleChange(ChangeEventArgs e)
    {
        result = Int32.Parse(e.Value.ToString());
        var addItem = new LibraryStoreEcommerce.AddressInput {ID =result};
        var response = await Http.PostAsJsonAsync<LibraryStoreEcommerce.AddressInput>("api/Address/SelectDistrictbyProvince", addItem);
        listdistrict = await response.Content.ReadFromJsonAsync<List<Address>>(); 
    }
    int DistrictCode = 0;
    public async Task handleChange1(ChangeEventArgs e)
    {
        DistrictCode = Int32.Parse(e.Value.ToString());
    }
    //Đăng ký account
    public async Task RegisterCheck()
    {
        if(accountResgiter.UserName ==string.Empty || accountResgiter.FullName== string.Empty || accountResgiter.Password==string.Empty 
        ||accountResgiter.Email==string.Empty || accountResgiter.Phone ==string.Empty ||accountResgiter.Address ==string.Empty)
        {

        }
        else
        {
            await Register();
        }

    }
    public async Task Register()
    {
        var addItem = new LibraryStoreEcommerce.AccountResgiter
        {UserName=accountResgiter.UserName,Password=accountResgiter.Password
        ,FullName=accountResgiter.FullName,Phone=accountResgiter.Phone,Email=accountResgiter.Email
        ,ProvinceCode =result,DistrictCode=DistrictCode,Address=accountResgiter.Address,Sex=_intValue,Type=1,Birthday=accountResgiter.Birthday};
        var response = await Http.PostAsJsonAsync<LibraryStoreEcommerce.AccountResgiter>("api/Account/Register", addItem);
        if (response.IsSuccessStatusCode)
        {
            await _message.Success("Đăng ký thông tin thành công");
            StateHasChanged();
            _visible1 = false;
            _visible = true;
        }
        else
        {
            await _message.Error("Tên đăng nhập bị trùng hoặc đã xảy ra lỗi, hãy thử lại");
        }
    }
    void LoginEmail()
    {
         _message.Info("Đang phát triển");
    }
}